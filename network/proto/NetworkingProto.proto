syntax = "proto3";
package NetworkMessages;

message State
{
	uint64 tick = 1;
	uint64 sender = 2;
	optional double timestamp = 3;
}

message Handshake
{
	uint64 tick = 1;
	uint64 sender = 2;
	optional double timestamp = 3;
	optional string status = 5;
	repeated uint64 peers = 4;
}

message LobbyMessage
{
	uint64 sender = 1;
	string messageType = 2;
	string message = 3;
	optional LobbyStatus lobbyStatus = 4;
	optional MapData mapData = 5;
}

message MapData
{
	optional string mapName = 1;
	int64 mapWidth = 2;
	int64 mapHeight = 3;
	string mapData = 4;
}

message LobbyStatus
{
	uint64 id = 7;
	bool isHost = 1;
	bool isReady = 2;
	int32 team = 3;
	int32 faction = 4;
	int32 colorIndex = 5;
	bool isAI = 6;
}

message Chat
{
	uint64 sender = 1;
	string message = 2;
}

message Command
{
	string commandType = 1;
	oneof command
	{
		MoveUnit moveUnit = 2;
		ActivateAbility activateAbility = 3;
		AddToProductionQueue addToProductionQueue = 4;
		RemoveFromProductionQueue removeFromProductionQueue = 5;
		MoveToFrontOfProductionQueue moveToFrontOfProductionQueue = 6;
		ExpandToHex expandToHex = 7;
		DevelopDistrict developDistrict = 8;
		RenameCity renameCity = 9;
		SelectResearch selectResearch = 10;
		SelectCulture selectCulture = 11;
		AddResourceAssignment addResourceAssignment = 12;
		RemoveResourceAssignment removeResourceAssignment = 13;
		EndTurn endTurn = 14;
		AddPendingDeal addPendingDeal = 15;
		RemovePendingDeal removePendingDeal = 16;
		ExecutePendingDeal ExecutePendingDeal = 17;
		NewExportRoute NewExportRoute = 18;
		RemoveExportRoute RemoveExportRoute = 19;
		NewTradeRoute NewTradeRoute = 20;
		RemoveTradeRoute RemoveTradeRoute = 21;
		AssignPolicyCard AssignPolicyCard = 22;
		UnassignPolicyCard UnassignPolicyCard = 23;
		SetGovernment SetGovernment = 24;
		SpawnUnit SpawnUnit = 25;
		SetDiplomaticState SetDiplomaticState = 26;
	}
	uint64 sender = 99;
}

message SetDiplomaticState
{
	int32 teamNumOne = 1;
	int32 teamNumTwo = 2;
	int32 diplomaticState = 3;
}

message NewExportRoute 
{
	int32 fromCityID = 1;
	int32 toCityID = 2;
	int32 yieldType = 3;
}

message RemoveExportRoute
{
	int32 fromCityID = 1;
	int32 toCityID = 2;
	int32 yieldType = 3;
}

message NewTradeRoute
{
	int32 fromCityID = 1;
	int32 toCityID = 2;
}

message RemoveTradeRoute
{
	int32 fromCityID = 1;
	int32 toCityID = 2;
}

message AssignPolicyCard
{
	int32 teamNum = 1;
	int32 policyCardID = 2;
}

message UnassignPolicyCard
{
	int32 teamNum = 1;
	int32 policyCardID = 2;
}

message SetGovernment
{
	int32 teamNum = 1;
	int32 govType = 2;
}

message SpawnUnit
{
	string unitType = 1;
	int32 id = 2;
	int32 teamNum = 3;
	Hex position = 4;
	bool stackable = 5;
	bool flexible = 6;
}

message AddPendingDeal
{
	int32 dealID = 1;
	int32 fromTeamNum = 2;
	int32 toTeamNum = 3;
	repeated DiplomaticActionMessage requestedActions = 4;
	repeated DiplomaticActionMessage offeredActions = 5;
}

message ExecutePendingDeal
{
	int32 dealID = 1;
}

message RemovePendingDeal
{
	 int32 dealID = 1;
}

message DiplomaticActionMessage
{
	optional int32 actionID = 1;
	int32 fromTeamNum = 2;
	int32 toTeamNum = 3;
	string ActionName = 4;
	optional int32 duration = 5;
	optional int32 quantity = 6;
}

message EndTurn
{
	int32 teamNum = 1;
}

message AddResourceAssignment
{
	int32 cityID = 1;
	int32 resourceName = 2;
	Hex sourceHex = 3;
}

message RemoveResourceAssignment
{
	int32 teamNum = 1;
	Hex sourceHex = 2;
}

message SelectResearch
{
	int32 teamNum = 1;
	string researchName = 2;
}

message SelectCulture
{
	int32 teamNum = 1;
	string cultureName = 2;
}

message RenameCity
{
	int32 cityID = 1;
	string name = 2;
}

message AddToProductionQueue
{
	string itemName = 1;
	Hex target = 2;
	int32 cityID = 3;
	bool front = 4;
}
message RemoveFromProductionQueue
{
	int32 index = 1;
	int32 cityID = 2;
}
message MoveToFrontOfProductionQueue
{
	int32 index = 1;
	int32 cityID = 2;
}

message ExpandToHex
{
	int32 cityID = 1;
	Hex target = 2;
}

message DevelopDistrict
{
	int32 cityID = 1;
	Hex target = 2;
	int32 districtType = 3;
}

message MoveUnit
{
	int32 unitId = 1;
	Hex target = 2;
	bool isEnemy = 3;
}

message ActivateAbility
{
	int32 unitId = 1;
	string abilityName = 2;
	Hex target = 3;
}

message Hex
{
	int32 q = 1;
	int32 r = 2;
	int32 s = 3;
}
